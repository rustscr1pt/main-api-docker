version: "3.4"
services:

  rust-axum-api:
    build: ./ugo-api-axum
    container_name: rust-axum-api
    restart: unless-stopped
    stdin_open: true
    environment:
      - SESSION_DURATION=900
      - DEPLOY_PORT=8000
      - FILE_LOCATION=/usr/local/bin/config.json
      - AUTH_EXPRESS_API_PORT=8001
      - TELEGRAM_API_PORT=8002
      - TOKEN_EXPRESS_API_PORT=8003
    networks:
      - docker-rust-network

  auth-express-api:
    build: ./auth-express-api
    command: npm run start
    container_name: auth-express-api
    restart: unless-stopped
    environment:
      - DEPLOY_PORT=8001
    networks:
      - docker-rust-network

  tg-express-api:
    build: ./tg-express-api
    command: npm run start
    container_name: tg-express-api
    restart: unless-stopped
    environment:
      - DEPLOY_PORT=8002
    networks:
      - docker-rust-network

  token-express-api:
    build: ./token-express-api
    command: npm run start
    container_name: token-express-api
    restart: unless-stopped
    environment:
      - DEPLOY_PORT=8003
    networks:
      - docker-rust-network

  token-cleaner-express:
    build: ./token-cleaner-express
    command: npm run start
    container_name: token-cleaner-express
    restart: unless-stopped
    networks:
      - docker-rust-network

  images-plugin-express-api:
    build: ./images-plugin-express-api
    command: npm run start
    container_name: images-plugin-express-api
    environment:
      - DEPLOY_PORT=8004
      - DEPLOY_LINK=https://trustedapi.space
    restart: unless-stopped
    networks:
      - docker-rust-network

  rust-axum-nginx:
    build: ./nginx
    container_name: rust-axum-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt/live/trustedapi.space/fullchain.pem:/etc/ssl/certs/fullchain.pem:ro
      - /etc/letsencrypt/live/trustedapi.space/privkey.pem:/etc/ssl/private/privkey.pem:ro
    depends_on:
      - rust-axum-api
      - auth-express-api
      - tg-express-api
      - token-express-api
      - token-cleaner-express
    networks:
      - docker-rust-network

networks:
  docker-rust-network:
    driver: bridge